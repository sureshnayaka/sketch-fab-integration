{
  "version": 3,
  "sources": ["../../../../../node_modules/penpal/lib/enums.js", "../../../../../node_modules/penpal/lib/createDestructor.js", "../../../../../node_modules/penpal/lib/createLogger.js", "../../../../../node_modules/penpal/lib/parent/getOriginFromSrc.js", "../../../../../node_modules/penpal/lib/errorSerialization.js", "../../../../../node_modules/penpal/lib/connectCallReceiver.js", "../../../../../node_modules/penpal/lib/generateId.js", "../../../../../node_modules/penpal/lib/methodSerialization.js", "../../../../../node_modules/penpal/lib/connectCallSender.js", "../../../../../node_modules/penpal/lib/parent/handleAckMessageFactory.js", "../../../../../node_modules/penpal/lib/parent/handleSynMessageFactory.js", "../../../../../node_modules/penpal/lib/parent/monitorIframeRemoval.js", "../../../../../node_modules/penpal/lib/startConnectionTimeout.js", "../../../../../node_modules/penpal/lib/parent/validateIframeHasSrcOrSrcDoc.js", "../../../../../node_modules/penpal/lib/parent/connectToChild.js", "../../../../../node_modules/penpal/lib/child/handleSynAckMessageFactory.js", "../../../../../node_modules/penpal/lib/child/connectToParent.js", "../../../../../node_modules/penpal/lib/index.js", "../../../../../node_modules/@chili-publish/publisher-interface/lib/PublisherInterface.js"],
  "sourcesContent": ["export var MessageType;\n(function (MessageType) {\n    MessageType[\"Call\"] = \"call\";\n    MessageType[\"Reply\"] = \"reply\";\n    MessageType[\"Syn\"] = \"syn\";\n    MessageType[\"SynAck\"] = \"synAck\";\n    MessageType[\"Ack\"] = \"ack\";\n})(MessageType || (MessageType = {}));\nexport var Resolution;\n(function (Resolution) {\n    Resolution[\"Fulfilled\"] = \"fulfilled\";\n    Resolution[\"Rejected\"] = \"rejected\";\n})(Resolution || (Resolution = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"ConnectionDestroyed\"] = \"ConnectionDestroyed\";\n    ErrorCode[\"ConnectionTimeout\"] = \"ConnectionTimeout\";\n    ErrorCode[\"NoIframeSrc\"] = \"NoIframeSrc\";\n})(ErrorCode || (ErrorCode = {}));\nexport var NativeErrorName;\n(function (NativeErrorName) {\n    NativeErrorName[\"DataCloneError\"] = \"DataCloneError\";\n})(NativeErrorName || (NativeErrorName = {}));\nexport var NativeEventType;\n(function (NativeEventType) {\n    NativeEventType[\"Message\"] = \"message\";\n})(NativeEventType || (NativeEventType = {}));\n", "export default (localName, log) => {\n    const callbacks = [];\n    let destroyed = false;\n    return {\n        destroy(error) {\n            if (!destroyed) {\n                destroyed = true;\n                log(`${localName}: Destroying connection`);\n                callbacks.forEach((callback) => {\n                    callback(error);\n                });\n            }\n        },\n        onDestroy(callback) {\n            destroyed ? callback() : callbacks.push(callback);\n        },\n    };\n};\n", "export default (debug) => {\n    /**\n     * Logs a message if debug is enabled.\n     */\n    return (...args) => {\n        if (debug) {\n            console.log('[Penpal]', ...args); // eslint-disable-line no-console\n        }\n    };\n};\n", "const DEFAULT_PORT_BY_PROTOCOL = {\n    'http:': '80',\n    'https:': '443',\n};\nconst URL_REGEX = /^(https?:)?\\/\\/([^/:]+)?(:(\\d+))?/;\nconst opaqueOriginSchemes = ['file:', 'data:'];\n/**\n * Converts a src value into an origin.\n */\nexport default (src) => {\n    if (src && opaqueOriginSchemes.find((scheme) => src.startsWith(scheme))) {\n        // The origin of the child document is an opaque origin and its\n        // serialization is \"null\"\n        // https://html.spec.whatwg.org/multipage/origin.html#origin\n        return 'null';\n    }\n    // Note that if src is undefined, then srcdoc is being used instead of src\n    // and we can follow this same logic below to get the origin of the parent,\n    // which is the origin that we will need to use.\n    const location = document.location;\n    const regexResult = URL_REGEX.exec(src);\n    let protocol;\n    let hostname;\n    let port;\n    if (regexResult) {\n        // It's an absolute URL. Use the parsed info.\n        // regexResult[1] will be undefined if the URL starts with //\n        protocol = regexResult[1] ? regexResult[1] : location.protocol;\n        hostname = regexResult[2];\n        port = regexResult[4];\n    }\n    else {\n        // It's a relative path. Use the current location's info.\n        protocol = location.protocol;\n        hostname = location.hostname;\n        port = location.port;\n    }\n    // If the port is the default for the protocol, we don't want to add it to the origin string\n    // or it won't match the message's event.origin.\n    const portSuffix = port && port !== DEFAULT_PORT_BY_PROTOCOL[protocol] ? `:${port}` : '';\n    return `${protocol}//${hostname}${portSuffix}`;\n};\n", "/**\n * Converts an error object into a plain object.\n */\nexport const serializeError = ({ name, message, stack, }) => ({\n    name,\n    message,\n    stack,\n});\n/**\n * Converts a plain object into an error object.\n */\nexport const deserializeError = (obj) => {\n    const deserializedError = new Error();\n    // @ts-ignore\n    Object.keys(obj).forEach((key) => (deserializedError[key] = obj[key]));\n    return deserializedError;\n};\n", "import { serializeError } from './errorSerialization';\nimport { MessageType, NativeEventType, NativeErrorName, Resolution, } from './enums';\n/**\n * Listens for \"call\" messages coming from the remote, executes the corresponding method, and\n * responds with the return value.\n */\nexport default (info, serializedMethods, log) => {\n    const { localName, local, remote, originForSending, originForReceiving, } = info;\n    let destroyed = false;\n    const handleMessageEvent = (event) => {\n        if (event.source !== remote || event.data.penpal !== MessageType.Call) {\n            return;\n        }\n        if (originForReceiving !== '*' && event.origin !== originForReceiving) {\n            log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n            return;\n        }\n        const callMessage = event.data;\n        const { methodName, args, id } = callMessage;\n        log(`${localName}: Received ${methodName}() call`);\n        const createPromiseHandler = (resolution) => {\n            return (returnValue) => {\n                log(`${localName}: Sending ${methodName}() reply`);\n                if (destroyed) {\n                    // It's possible to throw an error here, but it would need to be thrown asynchronously\n                    // and would only be catchable using window.onerror. This is because the consumer\n                    // is merely returning a value from their method and not calling any function\n                    // that they could wrap in a try-catch. Even if the consumer were to catch the error,\n                    // the value of doing so is questionable. Instead, we'll just log a message.\n                    log(`${localName}: Unable to send ${methodName}() reply due to destroyed connection`);\n                    return;\n                }\n                const message = {\n                    penpal: MessageType.Reply,\n                    id,\n                    resolution,\n                    returnValue,\n                };\n                if (resolution === Resolution.Rejected &&\n                    returnValue instanceof Error) {\n                    message.returnValue = serializeError(returnValue);\n                    message.returnValueIsError = true;\n                }\n                try {\n                    remote.postMessage(message, originForSending);\n                }\n                catch (err) {\n                    // If a consumer attempts to send an object that's not cloneable (e.g., window),\n                    // we want to ensure the receiver's promise gets rejected.\n                    if (err.name === NativeErrorName.DataCloneError) {\n                        const errorReplyMessage = {\n                            penpal: MessageType.Reply,\n                            id,\n                            resolution: Resolution.Rejected,\n                            returnValue: serializeError(err),\n                            returnValueIsError: true,\n                        };\n                        remote.postMessage(errorReplyMessage, originForSending);\n                    }\n                    throw err;\n                }\n            };\n        };\n        new Promise((resolve) => resolve(serializedMethods[methodName].apply(serializedMethods, args))).then(createPromiseHandler(Resolution.Fulfilled), createPromiseHandler(Resolution.Rejected));\n    };\n    local.addEventListener(NativeEventType.Message, handleMessageEvent);\n    return () => {\n        destroyed = true;\n        local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n    };\n};\n", "let id = 0;\n/**\n * @return {number} A unique ID (not universally unique)\n */\nexport default () => ++id;\n", "const KEY_PATH_DELIMITER = '.';\nconst keyPathToSegments = (keyPath) => keyPath ? keyPath.split(KEY_PATH_DELIMITER) : [];\nconst segmentsToKeyPath = (segments) => segments.join(KEY_PATH_DELIMITER);\nconst createKeyPath = (key, prefix) => {\n    const segments = keyPathToSegments(prefix || '');\n    segments.push(key);\n    return segmentsToKeyPath(segments);\n};\n/**\n * Given a `keyPath`, set it to be `value` on `subject`, creating any intermediate\n * objects along the way.\n *\n * @param {Object} subject The object on which to set value.\n * @param {string} keyPath The key path at which to set value.\n * @param {Object} value The value to store at the given key path.\n * @returns {Object} Updated subject.\n */\nexport const setAtKeyPath = (subject, keyPath, value) => {\n    const segments = keyPathToSegments(keyPath);\n    segments.reduce((prevSubject, key, idx) => {\n        if (typeof prevSubject[key] === 'undefined') {\n            prevSubject[key] = {};\n        }\n        if (idx === segments.length - 1) {\n            prevSubject[key] = value;\n        }\n        return prevSubject[key];\n    }, subject);\n    return subject;\n};\n/**\n * Given a dictionary of (nested) keys to function, flatten them to a map\n * from key path to function.\n *\n * @param {Object} methods The (potentially nested) object to serialize.\n * @param {string} prefix A string with which to prefix entries. Typically not intended to be used by consumers.\n * @returns {Object} An map from key path in `methods` to functions.\n */\nexport const serializeMethods = (methods, prefix) => {\n    const flattenedMethods = {};\n    Object.keys(methods).forEach((key) => {\n        const value = methods[key];\n        const keyPath = createKeyPath(key, prefix);\n        if (typeof value === 'object') {\n            // Recurse into any nested children.\n            Object.assign(flattenedMethods, serializeMethods(value, keyPath));\n        }\n        if (typeof value === 'function') {\n            // If we've found a method, expose it.\n            flattenedMethods[keyPath] = value;\n        }\n    });\n    return flattenedMethods;\n};\n/**\n * Given a map of key paths to functions, unpack the key paths to an object.\n *\n * @param {Object} flattenedMethods A map of key paths to functions to unpack.\n * @returns {Object} A (potentially nested) map of functions.\n */\nexport const deserializeMethods = (flattenedMethods) => {\n    const methods = {};\n    for (const keyPath in flattenedMethods) {\n        setAtKeyPath(methods, keyPath, flattenedMethods[keyPath]);\n    }\n    return methods;\n};\n", "import generateId from './generateId';\nimport { deserializeError } from './errorSerialization';\nimport { deserializeMethods } from './methodSerialization';\nimport { ErrorCode, MessageType, NativeEventType, Resolution } from './enums';\n/**\n * Augments an object with methods that match those defined by the remote. When these methods are\n * called, a \"call\" message will be sent to the remote, the remote's corresponding method will be\n * executed, and the method's return value will be returned via a message.\n * @param {Object} callSender Sender object that should be augmented with methods.\n * @param {Object} info Information about the local and remote windows.\n * @param {Array} methodKeyPaths Key paths of methods available to be called on the remote.\n * @param {Promise} destructionPromise A promise resolved when destroy() is called on the penpal\n * connection.\n * @returns {Object} The call sender object with methods that may be called.\n */\nexport default (callSender, info, methodKeyPaths, destroyConnection, log) => {\n    const { localName, local, remote, originForSending, originForReceiving, } = info;\n    let destroyed = false;\n    log(`${localName}: Connecting call sender`);\n    const createMethodProxy = (methodName) => {\n        return (...args) => {\n            log(`${localName}: Sending ${methodName}() call`);\n            // This handles the case where the iframe has been removed from the DOM\n            // (and therefore its window closed), the consumer has not yet\n            // called destroy(), and the user calls a method exposed by\n            // the remote. We detect the iframe has been removed and force\n            // a destroy() immediately so that the consumer sees the error saying\n            // the connection has been destroyed. We wrap this check in a try catch\n            // because Edge throws an \"Object expected\" error when accessing\n            // contentWindow.closed on a contentWindow from an iframe that's been\n            // removed from the DOM.\n            let iframeRemoved;\n            try {\n                if (remote.closed) {\n                    iframeRemoved = true;\n                }\n            }\n            catch (e) {\n                iframeRemoved = true;\n            }\n            if (iframeRemoved) {\n                destroyConnection();\n            }\n            if (destroyed) {\n                const error = new Error(`Unable to send ${methodName}() call due ` + `to destroyed connection`);\n                error.code = ErrorCode.ConnectionDestroyed;\n                throw error;\n            }\n            return new Promise((resolve, reject) => {\n                const id = generateId();\n                const handleMessageEvent = (event) => {\n                    if (event.source !== remote ||\n                        event.data.penpal !== MessageType.Reply ||\n                        event.data.id !== id) {\n                        return;\n                    }\n                    if (originForReceiving !== '*' &&\n                        event.origin !== originForReceiving) {\n                        log(`${localName} received message from origin ${event.origin} which did not match expected origin ${originForReceiving}`);\n                        return;\n                    }\n                    const replyMessage = event.data;\n                    log(`${localName}: Received ${methodName}() reply`);\n                    local.removeEventListener(NativeEventType.Message, handleMessageEvent);\n                    let returnValue = replyMessage.returnValue;\n                    if (replyMessage.returnValueIsError) {\n                        returnValue = deserializeError(returnValue);\n                    }\n                    (replyMessage.resolution === Resolution.Fulfilled ? resolve : reject)(returnValue);\n                };\n                local.addEventListener(NativeEventType.Message, handleMessageEvent);\n                const callMessage = {\n                    penpal: MessageType.Call,\n                    id,\n                    methodName,\n                    args,\n                };\n                remote.postMessage(callMessage, originForSending);\n            });\n        };\n    };\n    // Wrap each method in a proxy which sends it to the corresponding receiver.\n    const flattenedMethods = methodKeyPaths.reduce((api, name) => {\n        api[name] = createMethodProxy(name);\n        return api;\n    }, {});\n    // Unpack the structure of the provided methods object onto the CallSender, exposing\n    // the methods in the same shape they were provided.\n    Object.assign(callSender, deserializeMethods(flattenedMethods));\n    return () => {\n        destroyed = true;\n    };\n};\n", "import connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles an ACK handshake message.\n */\nexport default (serializedMethods, childOrigin, originForSending, destructor, log) => {\n    const { destroy, onDestroy } = destructor;\n    let destroyCallReceiver;\n    let receiverMethodNames;\n    // We resolve the promise with the call sender. If the child reconnects\n    // (for example, after refreshing or navigating to another page that\n    // uses Penpal, we'll update the call sender with methods that match the\n    // latest provided by the child.\n    const callSender = {};\n    return (event) => {\n        if (childOrigin !== '*' && event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received ACK message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received ACK');\n        const info = {\n            localName: 'Parent',\n            local: window,\n            remote: event.source,\n            originForSending: originForSending,\n            originForReceiving: childOrigin,\n        };\n        // If the child reconnected, we need to destroy the prior call receiver\n        // before setting up a new one.\n        if (destroyCallReceiver) {\n            destroyCallReceiver();\n        }\n        destroyCallReceiver = connectCallReceiver(info, serializedMethods, log);\n        onDestroy(destroyCallReceiver);\n        // If the child reconnected, we need to remove the methods from the\n        // previous call receiver off the sender.\n        if (receiverMethodNames) {\n            receiverMethodNames.forEach((receiverMethodName) => {\n                delete callSender[receiverMethodName];\n            });\n        }\n        receiverMethodNames = event.data.methodNames;\n        const destroyCallSender = connectCallSender(callSender, info, receiverMethodNames, destroy, log);\n        onDestroy(destroyCallSender);\n        return callSender;\n    };\n};\n", "import { MessageType } from '../enums';\n/**\n * Handles a SYN handshake message.\n */\nexport default (log, serializedMethods, childOrigin, originForSending) => {\n    return (event) => {\n        // Under specific timing circumstances, we can receive an event\n        // whose source is null. This seems to happen when the child iframe is\n        // removed from the DOM about the same time it has sent the SYN event.\n        // https://github.com/Aaronius/penpal/issues/85\n        if (!event.source) {\n            return;\n        }\n        if (childOrigin !== '*' && event.origin !== childOrigin) {\n            log(`Parent: Handshake - Received SYN message from origin ${event.origin} which did not match expected origin ${childOrigin}`);\n            return;\n        }\n        log('Parent: Handshake - Received SYN, responding with SYN-ACK');\n        const synAckMessage = {\n            penpal: MessageType.SynAck,\n            methodNames: Object.keys(serializedMethods),\n        };\n        event.source.postMessage(synAckMessage, originForSending);\n    };\n};\n", "const CHECK_IFRAME_IN_DOC_INTERVAL = 60000;\n/**\n * Monitors for iframe removal and destroys connection if iframe\n * is found to have been removed from DOM. This is to prevent memory\n * leaks when the iframe is removed from the document and the consumer\n * hasn't called destroy(). Without this, event listeners attached to\n * the window would stick around and since the event handlers have a\n * reference to the iframe in their closures, the iframe would stick\n * around too.\n */\nexport default (iframe, destructor) => {\n    const { destroy, onDestroy } = destructor;\n    const checkIframeInDocIntervalId = setInterval(() => {\n        if (!iframe.isConnected) {\n            clearInterval(checkIframeInDocIntervalId);\n            destroy();\n        }\n    }, CHECK_IFRAME_IN_DOC_INTERVAL);\n    onDestroy(() => {\n        clearInterval(checkIframeInDocIntervalId);\n    });\n};\n", "import { ErrorCode } from './enums';\n/**\n * Starts a timeout and calls the callback with an error\n * if the timeout completes before the stop function is called.\n */\nexport default (timeout, callback) => {\n    let timeoutId;\n    if (timeout !== undefined) {\n        timeoutId = window.setTimeout(() => {\n            const error = new Error(`Connection timed out after ${timeout}ms`);\n            error.code = ErrorCode.ConnectionTimeout;\n            callback(error);\n        }, timeout);\n    }\n    return () => {\n        clearTimeout(timeoutId);\n    };\n};\n", "import { ErrorCode } from '../enums';\nexport default (iframe) => {\n    if (!iframe.src && !iframe.srcdoc) {\n        const error = new Error('Iframe must have src or srcdoc property defined.');\n        error.code = ErrorCode.NoIframeSrc;\n        throw error;\n    }\n};\n", "import { MessageType, NativeEventType } from '../enums';\nimport createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport getOriginFromSrc from './getOriginFromSrc';\nimport handleAckMessageFactory from './handleAckMessageFactory';\nimport handleSynMessageFactory from './handleSynMessageFactory';\nimport { serializeMethods } from '../methodSerialization';\nimport monitorIframeRemoval from './monitorIframeRemoval';\nimport startConnectionTimeout from '../startConnectionTimeout';\nimport validateIframeHasSrcOrSrcDoc from './validateIframeHasSrcOrSrcDoc';\n/**\n * Attempts to establish communication with an iframe.\n */\nexport default (options) => {\n    let { iframe, methods = {}, childOrigin, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor('Parent', log);\n    const { onDestroy, destroy } = destructor;\n    if (!childOrigin) {\n        validateIframeHasSrcOrSrcDoc(iframe);\n        childOrigin = getOriginFromSrc(iframe.src);\n    }\n    // If event.origin is \"null\", the remote protocol is file: or data: and we\n    // must post messages with \"*\" as targetOrigin when sending messages.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n    const originForSending = childOrigin === 'null' ? '*' : childOrigin;\n    const serializedMethods = serializeMethods(methods);\n    const handleSynMessage = handleSynMessageFactory(log, serializedMethods, childOrigin, originForSending);\n    const handleAckMessage = handleAckMessageFactory(serializedMethods, childOrigin, originForSending, destructor, log);\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            if (event.source !== iframe.contentWindow || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.Syn) {\n                handleSynMessage(event);\n                return;\n            }\n            if (event.data.penpal === MessageType.Ack) {\n                const callSender = handleAckMessage(event);\n                if (callSender) {\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n                return;\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        log('Parent: Awaiting handshake');\n        monitorIframeRemoval(iframe, destructor);\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (error) {\n                reject(error);\n            }\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        },\n    };\n};\n", "import { MessageType } from '../enums';\nimport connectCallReceiver from '../connectCallReceiver';\nimport connectCallSender from '../connectCallSender';\n/**\n * Handles a SYN-ACK handshake message.\n */\nexport default (parentOrigin, serializedMethods, destructor, log) => {\n    const { destroy, onDestroy } = destructor;\n    return (event) => {\n        let originQualifies = parentOrigin instanceof RegExp\n            ? parentOrigin.test(event.origin)\n            : parentOrigin === '*' || parentOrigin === event.origin;\n        if (!originQualifies) {\n            log(`Child: Handshake - Received SYN-ACK from origin ${event.origin} which did not match expected origin ${parentOrigin}`);\n            return;\n        }\n        log('Child: Handshake - Received SYN-ACK, responding with ACK');\n        // If event.origin is \"null\", the remote protocol is file: or data: and we\n        // must post messages with \"*\" as targetOrigin when sending messages.\n        // https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage#Using_window.postMessage_in_extensions\n        const originForSending = event.origin === 'null' ? '*' : event.origin;\n        const ackMessage = {\n            penpal: MessageType.Ack,\n            methodNames: Object.keys(serializedMethods),\n        };\n        window.parent.postMessage(ackMessage, originForSending);\n        const info = {\n            localName: 'Child',\n            local: window,\n            remote: window.parent,\n            originForSending,\n            originForReceiving: event.origin,\n        };\n        const destroyCallReceiver = connectCallReceiver(info, serializedMethods, log);\n        onDestroy(destroyCallReceiver);\n        const callSender = {};\n        const destroyCallSender = connectCallSender(callSender, info, event.data.methodNames, destroy, log);\n        onDestroy(destroyCallSender);\n        return callSender;\n    };\n};\n", "import createDestructor from '../createDestructor';\nimport createLogger from '../createLogger';\nimport { MessageType, NativeEventType } from '../enums';\nimport handleSynAckMessageFactory from './handleSynAckMessageFactory';\nimport { serializeMethods } from '../methodSerialization';\nimport startConnectionTimeout from '../startConnectionTimeout';\nconst areGlobalsAccessible = () => {\n    try {\n        clearTimeout();\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n};\n/**\n * Attempts to establish communication with the parent window.\n */\nexport default (options = {}) => {\n    const { parentOrigin = '*', methods = {}, timeout, debug = false } = options;\n    const log = createLogger(debug);\n    const destructor = createDestructor('Child', log);\n    const { destroy, onDestroy } = destructor;\n    const serializedMethods = serializeMethods(methods);\n    const handleSynAckMessage = handleSynAckMessageFactory(parentOrigin, serializedMethods, destructor, log);\n    const sendSynMessage = () => {\n        log('Child: Handshake - Sending SYN');\n        const synMessage = { penpal: MessageType.Syn };\n        const parentOriginForSyn = parentOrigin instanceof RegExp ? '*' : parentOrigin;\n        window.parent.postMessage(synMessage, parentOriginForSyn);\n    };\n    const promise = new Promise((resolve, reject) => {\n        const stopConnectionTimeout = startConnectionTimeout(timeout, destroy);\n        const handleMessage = (event) => {\n            // Under niche scenarios, we get into this function after\n            // the iframe has been removed from the DOM. In Edge, this\n            // results in \"Object expected\" errors being thrown when we\n            // try to access properties on window (global properties).\n            // For this reason, we try to access a global up front (clearTimeout)\n            // and if it fails we can assume the iframe has been removed\n            // and we ignore the message event.\n            if (!areGlobalsAccessible()) {\n                return;\n            }\n            if (event.source !== parent || !event.data) {\n                return;\n            }\n            if (event.data.penpal === MessageType.SynAck) {\n                const callSender = handleSynAckMessage(event);\n                if (callSender) {\n                    window.removeEventListener(NativeEventType.Message, handleMessage);\n                    stopConnectionTimeout();\n                    resolve(callSender);\n                }\n            }\n        };\n        window.addEventListener(NativeEventType.Message, handleMessage);\n        sendSynMessage();\n        onDestroy((error) => {\n            window.removeEventListener(NativeEventType.Message, handleMessage);\n            if (error) {\n                reject(error);\n            }\n        });\n    });\n    return {\n        promise,\n        destroy() {\n            // Don't allow consumer to pass an error into destroy.\n            destroy();\n        },\n    };\n};\n", "export { default as connectToChild } from './parent/connectToChild';\nexport { default as connectToParent } from './child/connectToParent';\nexport { ErrorCode } from './enums';\n", "var $7i1sb$penpal = require(\"penpal\");\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n$parcel$export(module.exports, \"PublisherInterface\", () => $3db7bcc71a7ab568$export$a13915682e709c4f, (v) => $3db7bcc71a7ab568$export$a13915682e709c4f = v);\n\nvar $3db7bcc71a7ab568$var$__awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar $3db7bcc71a7ab568$var$__classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar $3db7bcc71a7ab568$var$__classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar $3db7bcc71a7ab568$var$_PublisherInterface_editorObject;\nconst $3db7bcc71a7ab568$var$createCustomFunctionsInterface = function(chiliWrapper, createDebugLog) {\n    return {\n        register: function(name, body) {\n            return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n                createDebugLog({\n                    functionName: \"registerFunction()\"\n                });\n                const response = yield chiliWrapper.registerFunction(name, body);\n                if (response.isError) throw new Error(response.error);\n            });\n        },\n        registerOnEvent: function(eventName, body) {\n            return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n                createDebugLog({\n                    functionName: \"registerFunction()\"\n                });\n                const response = yield chiliWrapper.registerFunctionOnEvent(eventName, body);\n                if (response.isError) throw new Error(response.error);\n            });\n        },\n        execute: function(name, ...args) {\n            return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n                createDebugLog({\n                    functionName: \"executeRegisteredFunction()\"\n                });\n                const response = yield chiliWrapper.executeRegisteredFunction(name, args);\n                if (response.isError) throw new Error(response.error);\n                return response.ok;\n            });\n        }\n    };\n};\nclass $3db7bcc71a7ab568$export$a13915682e709c4f {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(){\n        this.customFunction = {\n            register: function(name, body) {\n                throw new Error(\"Function not implemented.\");\n            },\n            registerOnEvent: function(eventName, body) {\n                throw new Error(\"Function not implemented.\");\n            },\n            execute: function(name, args) {\n                throw new Error(\"Function not implemented.\");\n            }\n        };\n        this.chiliEventListenerCallbacks = new Map();\n        this.debug = false;\n        this.creationTime = \"\";\n        $3db7bcc71a7ab568$var$_PublisherInterface_editorObject.set(this, null);\n        /**\n         * Make getProperty an alias for getObject\n         */ this.getProperty = this.getObject;\n    }\n    static buildWithIframe(targetIframe, options) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            return $3db7bcc71a7ab568$export$a13915682e709c4f.build(Object.assign({\n                targetIframe: targetIframe\n            }, options));\n        });\n    }\n    static buildOnElement(parentElement, editorURL, options) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            return $3db7bcc71a7ab568$export$a13915682e709c4f.build(Object.assign({\n                parentElement: parentElement,\n                editorURL: editorURL\n            }, options));\n        });\n    }\n    /**\n     * The build method will wait for a connection to the other side of iframe. Must be called before iframe `onload` event is fired.\n     *\n     * @param iframe\n     * @param options\n     * @returns {PublisherInterface}\n     */ static build(options) {\n        var _a, _b, _c, _d;\n        return $3db7bcc71a7ab568$var$__awaiter(this, arguments, void 0, function*() {\n            // Supporting code that is expecting pre 1.0 behavior\n            if (arguments[0].tagName == \"IFRAME\") {\n                const originalOptions = (_a = arguments[1]) !== null && _a !== void 0 ? _a : {};\n                options = Object.assign(Object.assign({}, originalOptions), {\n                    targetIframe: arguments[0],\n                    debug: (_b = options.debug) !== null && _b !== void 0 ? _b : originalOptions[\"penpalDebug\"]\n                });\n            }\n            const stringifiedOptions = ((opts)=>{\n                try {\n                    return JSON.stringify(opts);\n                } catch (e) {\n                    return e.toString();\n                }\n            })(options);\n            const publisherInterface = new $3db7bcc71a7ab568$export$a13915682e709c4f();\n            publisherInterface.creationTime = new Date().toLocaleString();\n            publisherInterface.debug = (_c = options.debug) !== null && _c !== void 0 ? _c : false;\n            publisherInterface.createDebugLog({\n                functionName: \"build()\",\n                customMessage: \"Calling build() with options: \" + stringifiedOptions\n            });\n            const iframe = (_d = options.targetIframe) !== null && _d !== void 0 ? _d : document.createElement(\"iframe\");\n            publisherInterface.iframe = iframe;\n            if (options.editorURL != null) iframe.src = options.editorURL;\n            const connectionPromise = (0, $7i1sb$penpal.connectToChild)({\n                iframe: // The iframe to which a connection should be made\n                iframe,\n                // Methods the parent is exposing to the child\n                methods: {\n                    handleEvents: publisherInterface.handleEvents.bind(publisherInterface)\n                },\n                timeout: options.timeout,\n                debug: options.debug\n            });\n            if (options.parentElement != null) options.parentElement.appendChild(iframe);\n            publisherInterface.child = yield connectionPromise.promise;\n            publisherInterface.customFunction = $3db7bcc71a7ab568$var$createCustomFunctionsInterface(publisherInterface.child, publisherInterface.createDebugLog.bind(publisherInterface));\n            const events = options.events;\n            if (events != null && events.length > 0) {\n                for (const event of events)if (typeof event == \"string\") publisherInterface.addListener(event);\n                else publisherInterface.addListener(event.name, event.func);\n            }\n            return publisherInterface;\n        });\n    }\n    handleEvents(eventName, id) {\n        var _a;\n        this.chiliEventListenerCallbacks.has(eventName) && ((_a = this.chiliEventListenerCallbacks.get(eventName)) === null || _a === void 0 || _a(id));\n        return eventName;\n    }\n    /**\n     * Logs a function call creation if debug is enabled\n     * @param functionName The name of the function being executed\n     */ createDebugLog({ functionName: functionName , customMessage: customMessage  }) {\n        if (this.debug) {\n            if (customMessage != null) console.log(`[PublisherInterface - ${this.creationTime}]`, `${functionName} : ${customMessage}`);\n            else console.log(`[PublisherInterface - ${this.creationTime}]`, `Creating ${functionName} call request`);\n        }\n    }\n    /**\n     * Returns an alias for editorObject with similarly named functions. This is to help with backwards compatibility, but these functions still return a Promise.\n     */ get editorObject() {\n        if ($3db7bcc71a7ab568$var$__classPrivateFieldGet(this, $3db7bcc71a7ab568$var$_PublisherInterface_editorObject, \"f\") == null) $3db7bcc71a7ab568$var$__classPrivateFieldSet(this, $3db7bcc71a7ab568$var$_PublisherInterface_editorObject, {\n            Alert: this.alert.bind(this),\n            GetDirtyState: this.getDirtyState.bind(this),\n            NextPage: this.nextPage.bind(this),\n            PreviousPage: this.previousPage.bind(this),\n            SetSelectedPage: this.setSelectedPage.bind(this),\n            GetSelectedPage: this.getSelectedPage.bind(this),\n            GetSelectedPageName: this.getSelectedPageName.bind(this),\n            GetNumPages: this.getNumPages.bind(this),\n            RemoveListener: this.removeListener.bind(this),\n            AddListener: this.addListener.bind(this),\n            GetObject: this.getObject.bind(this),\n            SetProperty: this.setProperty.bind(this),\n            ExecuteFunction: this.executeFunction.bind(this),\n            GetPageSnapshot: this.getPageSnapshot.bind(this),\n            GetFrameSnapshot: this.getFrameSnapshot.bind(this),\n            GetFrameSubjectArea: this.getFrameSubjectArea.bind(this),\n            SetFrameSubjectArea: this.setFrameSubjectArea.bind(this),\n            ClearFrameSubjectArea: this.clearFrameSubjectArea.bind(this),\n            GetAssetSubjectInfo: this.getAssetSubjectInfo.bind(this),\n            SetAssetSubjectInfo: this.setAssetSubjectInfo.bind(this),\n            ClearAssetSubjectInfo: this.clearAssetSubjectInfo.bind(this),\n            SetVariableIsLocked: this.setVariableIsLocked.bind(this)\n        }, \"f\");\n        return $3db7bcc71a7ab568$var$__classPrivateFieldGet(this, $3db7bcc71a7ab568$var$_PublisherInterface_editorObject, \"f\");\n    }\n    /**\n     * Displays a modal box within the editor UI containing a title with a message.\n     *\n     * @param message - The message to be displayed.\n     * @param title - The title/header of the modal.\n     */ alert(message, title) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"alert()\"\n            });\n            const response = yield this.child.alert(message, title);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Returns value of document.isDirty which signifies if the document has been changed since previous save.\n     *\n     * @returns Returns boolean to signify if the document has been changed since previous save.\n     */ getDirtyState() {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getDirtyState()\"\n            });\n            const response = yield this.child.getDirtyState();\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Selects the next page in the document.pages list.\n     * If the current selected page has the beginning index 0 then nothing happens.\n     */ nextPage() {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"nextPage()\"\n            });\n            const response = yield this.child.nextPage();\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Selects the previous page in the document.pages list.\n     * If the current selected page has the last index then nothing happens.\n     */ previousPage() {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"previousPage()\"\n            });\n            const response = yield this.child.previousPage();\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Selects page by common language page number causing the editor to visually jump to that page.\n     *\n     * @param page - Common language page number (page index + 1) to select.\n     */ setSelectedPage(page) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"setSelectedPage()\"\n            });\n            const response = yield this.child.setSelectedPage(page);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Returns the common language page number, which is page index + 1.\n     * So if you have page with index 0 selected, this would return 1.\n     *\n     * @returns Page index + 1 of the selected page.\n     */ getSelectedPage() {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getSelectedPage()\"\n            });\n            const response = yield this.child.getSelectedPage();\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Returns the name of the selected page.\n     *\n     * @returns Name of the page.\n     */ getSelectedPageName() {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getSelectedPageName()\"\n            });\n            const response = yield this.child.getSelectedPageName();\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Returns the total number of pages.\n     *\n     * @returns The total number of pages.\n     */ getNumPages() {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getNumPages()\"\n            });\n            const response = yield this.child.getNumPages();\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Removes the listener for the specified editor event.\n     *\n     * @param eventName - A case-sensitive string representing the editor event type to stop listening to.\n     */ removeListener(eventName) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"removeListener()\"\n            });\n            this.chiliEventListenerCallbacks.delete(eventName);\n            const response = yield this.child.removeListener(eventName);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Adds a listener to an editor event and a user defined callback function when event is fired.\n     * The function will receive the target id of the event and is executed when the event is triggered.\n     *\n     * @example\n     * ```ts\n     * publisherInterface.addListener(\"FrameMoved\", (targetId)=>{console.log(targetId)}));\n     * ```\n     * @param eventName - A case-sensitive string representing the editor event type to listen for.\n     * @param callbackFunction - A function that executes when the event is triggered. If callback is null, the listener will instead call window.OnEditorEvent\n     */ addListener(eventName, callbackFunction) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"addListener()\"\n            });\n            this.chiliEventListenerCallbacks.set(eventName, callbackFunction == null ? (targetID)=>{\n                if (window.OnEditorEvent != null) window.OnEditorEvent(eventName, targetID);\n            } : callbackFunction);\n            const response = yield this.child.addListener(eventName);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Gets the value of the property or object found at given chiliPath.\n     *\n     * @param chiliPath - A case-sensitive string query path for selecting properties and objects in a CHILI document.\n     * @returns Returns the value of the property or object found at given chiliPath.\n     */ getObject(chiliPath) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getObject()\"\n            });\n            const response = yield this.child.getObject(chiliPath);\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Sets the value of the property defined by property on the object defined by the chiliPath\n     *\n     * @param chiliPath - A case-sensitive string query path for selecting properties and objects in a CHILI document.\n     * @param property - The case-sensitive string name of the property found on the object of the chiliPath.\n     * @param value - The value to set the property.\n     */ setProperty(chiliPath, property, value) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"setProperty()\"\n            });\n            const response = yield this.child.setProperty(chiliPath, property, value);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Executes function of functionName found as a property or method on the object defined in the chiliPath.\n     *\n     * @example\n     * // Will add a new frame of type text on page of index 0 at coordinates X: 10 mm and Y: 15 mm with width: 100 mm and height: 50 mm\n     * ```ts\n     * publisherInterface.executeFunction('document.pages[0].frames', 'Add', 'text', '10 mm', '15 mm', '100 mm', '50 mm');\n     * ```\n     * @param chiliPath - A case-sensitive string query path for selecting properties and objects in a CHILI document.\n     * @param functionName - A case-sensitive string of the name of the function to execute.\n     * @param args - Parameters to be passed to function of functionName.\n     * @returns Returns the return of executed function.\n     */ executeFunction(chiliPath, functionName, ...args) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"executeFunction()\"\n            });\n            const response = yield this.child.executeFunction(chiliPath, functionName, args);\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Returns a base64 encoded PNG snapshot image of a specific page.\n     *\n     * @example\n     * ```ts\n     * \\\\ This will get a 1000 by 1000 image of the first page and open it in a popup.\n     * let base64 = publisherInterface.getPageSnapshot('0', '1000x1000', null, null, 'preview', true);\n     *\n     * let newImage = new Image();\n     * newImage.src = \"data:image/png;base64,\" + base64;\n     *\n     * let popup = open(\"\", \"Popup\", \"width=1000,height=1000,top=\"+(window.screen.height/2)+\",left=\"+(window.screen.height/2));\n     * popup.document.body.appendChild(newImage);\n     * ```\n     *\n     * @param pageIndex - The page index to return as an image.\n     * @param size - The size of the returned png. This can be set as an image size in pixels by using a string width x height. For example \"1000x1500\". This can be set as a zoom level. For example \"75\" would be 75% zoom of the document. This can be set as an object of width and height. For example \\{width:1000 height:1000\\}. If the size is set in pixels and the ratio is different from the page ratio, the image is scaled to fit entirely in the png and placed at (0,0) top left. The extra space at the bottom or the right is filled with background color. If a zoom percentage is given, the output size is automatically calculated using the document dimensions, assuming the resolution is 72 dpi.\n     * @param layers - An array of layers that are to be visible in the png. An array of visible layers can be provided using the layer \"name\" property or layer \"id\" property. If no list is passed, the layer visibility is the same as in the editor window.\n     * @param frames - An array of frames that are visible in the png. An array of visible frame elements can be provided using the frame \"tag\" property or layer \"id\" property. If no list is passed, the frame visibility is the same as in the editor window.\n     * @param viewMode - A string that is either: preview, edit, or technical. \"preview\" shows the page in standard preview mode in the same way as the editor does. If there is an active selection, it should not be indicated in the resulting png. Annotations should be hidden. \"edit\" shows the page in standard edit mode in the same way as the editor does. The view can be identical to the editor view, with active selections and frame handles. \"technical\" shows the page in edit mode, but without the control handles and selections. Annotations should be hidden.\n     * @param transparentBackground - A boolean that determines if the png document background should be transparent.\n     * @returns A base64 encoded PNG image of the document.\n     */ getPageSnapshot(pageIndex, size, layers, frames, viewMode, transparentBackground) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getPageSnapshot()\"\n            });\n            const response = yield this.child.getPageSnapshot(pageIndex, size, layers, frames, viewMode, transparentBackground);\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Returns a base64 encoded PNG snapshot image of a specific frame\n     *\n     * @param idOrTag - The id or tag of the frame to return as an image.\n     * @param size - The size of the returned png. This can be set as an image size in pixels by using a string width x height. For example \"1000x1500\". This can be set as a zoom level. For example \"75\" would be 75% zoom of the document. This can be set as an object of width and height. For example \\{width:1000 height:1000\\}. If the size is set in pixels and the ratio is different from the page ratio, the image is scaled to fit entirely in the png and placed at (0,0) top left. The extra space at the bottom or the right is filled with background color. If a zoom percentage is given, the output size is automatically calculated using the document dimensions, assuming the resolution is 72 dpi.\n     * @param transparentBackground - A boolean that determines if the png document background should be transparent.\n     * @returns A base64 encoded PNG image of the frame.\n     */ getFrameSnapshot(idOrTag, size, transparentBackground) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getFrameSnapshot()\"\n            });\n            const response = yield this.child.getFrameSnapshot(idOrTag, size, transparentBackground);\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Gets the frame subject area for the image fit mode Smart Fit.\n     *\n     * @param idOrTag - The string id or tag of the frame.\n     * @returns - The subject area of the frame.\n     */ getFrameSubjectArea(idOrTag) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getFrameSubjectArea()\"\n            });\n            const response = yield this.child.getFrameSubjectArea(idOrTag);\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Sets the frame subject area for the image fit mode Smart Fit.\n     *\n     * @param idOrTag - The string id or tag of the frame.\n     * @param x - A number 0 to 1 representing the x coordinate. Setting the number outside that range will clip the result to 0 or 1.\n     * @param y - A number 0 to 1 representing the y coordinate. Setting the number outside that range will clip the result to 0 or 1.\n     * @param width - A number 0 to 1 representing width. Setting the number outside that range will clip the result to 0 or 1.\n     * @param height -A number 0 to 1 representing height. Setting the number outside that range will clip the result to 0 or 1.\n     */ setFrameSubjectArea(idOrTag, x, y, width, height) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"setFrameSubjectArea()\"\n            });\n            const response = yield this.child.setFrameSubjectArea(idOrTag, x, y, width, height);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Resets the frame subject area to \\{height: \"0\", width: \"0\", x: \"1\", y: \"1\"\\}.\n     *\n     * @param idOrTag - The string id or tag of the frame to clear the subject area.\n     */ clearFrameSubjectArea(idOrTag) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"clearFrameSubjectArea()\"\n            });\n            const response = yield this.child.clearFrameSubjectArea(idOrTag);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Gets the asset subject area for the target frame for image fit mode Smart Fit.\n     *\n     * @param frameIdOrTag - The string id or tag of the frame.\n     * @returns The asset subject area.\n     */ getAssetSubjectInfo(frameIdOrTag) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"getAssetSubjectInfo()\"\n            });\n            const response = yield this.child.getAssetSubjectInfo(frameIdOrTag);\n            if (response.isError) throw new Error(response.error);\n            return response.ok;\n        });\n    }\n    /**\n     * Sets the asset subject area for the target frame for image fit mode Smart Fit.\n     *\n     * @param frameIdOrTag - The string id or tag of the frame.\n     * @param x - A number 0 to 1 representing the x coordinate. Setting the number outside that range will clip the result to 0 or 1.\n     * @param y - A number 0 to 1 representing the y coordinate. Setting the number outside that range will clip the result to 0 or 1.\n     * @param width - A number 0 to 1 representing width. Setting the number outside that range will clip the result to 0 or 1.\n     * @param height - A number 0 to 1 representing height. Setting the number outside that range will clip the result to 0 or 1.\n     * @param poiX - A number 0 to 1 representing x coordinate of teh point of interest. Setting the number outside that range will clip the result to 0 or 1.\n     * @param poiY - A number 0 to 1 representing y coordinate of teh point of interest.\n     */ setAssetSubjectInfo(frameIdOrTag, x, y, width, height, poiX, poiY) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"setAssetSubjectInfo()\"\n            });\n            const response = yield this.child.setAssetSubjectInfo(frameIdOrTag, x, y, width, height, poiX, poiY);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     * Resets the asset subject area of target to \\{height: \"0\", width: \"0\", x: \"1\", y: \"1\", poiX: \"0.5\", poiY: \"0.5\"\\}.\n     *\n     * @param frameIdOrTag - The string id or tag of the frame to clear the asset subject area.\n     */ clearAssetSubjectInfo(frameIdOrTag) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"clearAssetSubjectInfo()\"\n            });\n            const response = yield this.child.clearAssetSubjectInfo(frameIdOrTag);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n    /**\n     *  Sets the locked (editable) state of a variable.\n     *\n     * @param variableName - A case-sensitive string of the variable name to target.\n     * @param isLocked - A boolean to set the variable as locked or unlocked.\n     */ setVariableIsLocked(variableName, isLocked) {\n        return $3db7bcc71a7ab568$var$__awaiter(this, void 0, void 0, function*() {\n            this.createDebugLog({\n                functionName: \"setVariableIsLocked()\"\n            });\n            const response = yield this.child.setVariableIsLocked(variableName, isLocked);\n            if (response.isError) throw new Error(response.error);\n        });\n    }\n}\n$3db7bcc71a7ab568$var$_PublisherInterface_editorObject = new WeakMap();\n\n\n"],
  "mappings": "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",
  "names": ["MessageType", "Resolution", "ErrorCode", "NativeErrorName", "NativeEventType", "id", "id", "id"]
}
